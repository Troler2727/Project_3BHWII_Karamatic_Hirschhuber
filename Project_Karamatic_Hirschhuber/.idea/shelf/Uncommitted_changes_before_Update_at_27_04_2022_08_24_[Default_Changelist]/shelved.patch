Index: src/APP_MAIN.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Models.*;\r\n\r\nimport java.io.*;\r\nimport java.io.IOException;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.time.LocalTime;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class APP_MAIN {\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        // public Entity(int HP,int Mana,int speed, int atkspeed,int mr,int ar, int ap,int ad,boolean aggresive)\r\n        //Entity e1 = new Entity(100, 100, 100,100,10,10, 10,10,false);\r\n        //Entity e2 = new Entity(100, 100, 100,100,10,10, 10,20,false);\r\n        //Monster m1 = new Monster(100, 10, 100, 1, 0, 0, 10, 10 , false, \"PEDA\", 10.0, LocalTime.now());\r\n        //Champion c1 = Methods.createChamp();\r\n        //double gold = Methods.fight(m1,c1);\r\n        //System.out.println(gold);\r\n        //Path path = Paths.get(\"D:\\\\funn\\\\PROJECTS\\\\Project_3BHWII_Karamatic_Hirschhuber\\\\Champion_Liste\\\\championlist.csv\");\r\n\r\n\r\n        //System.out.println(e1);\r\n       // e1.recive_ad_damage(20); works\r\n       // e1.recive_ap_damage(20); works\r\n       // e2.atack_entity_ad(); works\r\n        // e1.heal(10);\r\n\r\n        //System.out.println(e1);\r\n\r\n       // Methods.gamemenu();\r\n       // Login login = new Login();\r\n\r\n        Methods m = new Methods();\r\n\r\n        m.gamemenu();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/APP_MAIN.java b/src/APP_MAIN.java
--- a/src/APP_MAIN.java	(revision ffecde299833fbd095fdac6de51e4f78a69606eb)
+++ b/src/APP_MAIN.java	(date 1650624986561)
@@ -11,6 +11,10 @@
 public class APP_MAIN {
 
     public static void main(String[] args) throws IOException {
+        //sebi path     Path path = Paths.get("C:\\Users\\HP\\Desktop\\repositories\\Project_3BHWII_Karamatic_Hirschhuber\\Champion_Liste\\championlist.csv");
+        //ian path      //Path path = Paths.get("D:\\funn\\PROJECTS\\Project_3BHWII_Karamatic_Hirschhuber\\Champion_Liste\\championlist.csv");
+
+
         // public Entity(int HP,int Mana,int speed, int atkspeed,int mr,int ar, int ap,int ad,boolean aggresive)
         //Entity e1 = new Entity(100, 100, 100,100,10,10, 10,10,false);
         //Entity e2 = new Entity(100, 100, 100,100,10,10, 10,20,false);
@@ -18,8 +22,6 @@
         //Champion c1 = Methods.createChamp();
         //double gold = Methods.fight(m1,c1);
         //System.out.println(gold);
-        //Path path = Paths.get("D:\\funn\\PROJECTS\\Project_3BHWII_Karamatic_Hirschhuber\\Champion_Liste\\championlist.csv");
-
 
         //System.out.println(e1);
        // e1.recive_ad_damage(20); works
Index: src/Models/Methods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Models;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.file.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Methods {\r\n\r\n    private Scanner reader = new Scanner(System.in);\r\n    private List<Champion> championList;\r\n\r\n\r\n\r\n    public void gamemenu() throws IOException {\r\n        Path path = Paths.get(\"C:\\\\Users\\\\HP\\\\Desktop\\\\repositories\\\\Project_3BHWII_Karamatic_Hirschhuber\\\\Champion_Liste\\\\championlist.csv\");\r\n        championList = readChamps(path);\r\n\r\n        char choice;\r\n        do {\r\n            System.out.println(\"\");\r\n            System.out.println(\"HAUPTMENÜ\\n\");\r\n            System.out.println(\"Herzlich Willkommen!\");\r\n            System.out.println(\"Wie wünschen Sie fortzufahren?\");\r\n            System.out.println(\"PvP[G]\");\r\n            System.out.println(\"PvE[M]\");\r\n            System.out.println(\"Shop[P]\");\r\n            System.out.println(\"Championverwaltung[C]\");\r\n            System.out.println(\"Beenden[B]\");\r\n            System.out.print(\"Ihre Wahl: \");\r\n            choice = reader.next().toLowerCase().charAt(0);\r\n            reader = new Scanner(System.in);\r\n            System.out.print(\"\\n\\n\");\r\n\r\n            switch (choice) {\r\n                case 'g':\r\n                    System.out.println(\"Spielerkampf\");\r\n                    break;\r\n\r\n                case 'm':\r\n                    System.out.println(\"Monster bekämpfen\");\r\n                    break;\r\n\r\n                case 'p':\r\n                    do {\r\n                        System.out.println(\"SHOP \\n\");\r\n                        System.out.println(\"AD[D]\");\r\n                        System.out.println(\"AP[P]\");\r\n                        System.out.println(\"Tank[T]\");\r\n                        System.out.println(\"Zurück[Z]\");\r\n                        System.out.println(\"Ihre Wahl: \");\r\n                        choice = reader.next().toLowerCase().charAt(0);\r\n                        reader = new Scanner(System.in);\r\n\r\n                        switch (choice) {\r\n                            case 'd':\r\n                                System.out.println(\"10 AD\");\r\n                                System.out.println(\"20 AD\");\r\n                                System.out.println(\"40 AD\");\r\n                                break;\r\n                            case 'p':\r\n                                System.out.println(\"10 AP\");\r\n                                System.out.println(\"25 AP\");\r\n                                System.out.println(\"50 AP\");\r\n                                break;\r\n                            case 't':\r\n                                System.out.println(\"10 Rüstung\");\r\n                                System.out.println(\"20 Rüstung\");\r\n                                System.out.println(\"15 Magieresistenz\");\r\n                                System.out.println(\"30 Magieresistenz\");\r\n                                System.out.println(\"50 Leben\");\r\n                                System.out.println(\"100 Leben\");\r\n                                break;\r\n                        }\r\n                    }\r\n                    while(choice != 'z');\r\n                    break;\r\n\r\n                case 'c':\r\n                    do {\r\n                        System.out.println(\"CHAMPIONVERWALTUNG\\n\");\r\n                        System.out.println(\"Champion laden[L]\");\r\n                        System.out.println(\"Champion erstellen[C]\");\r\n                        System.out.println(\"Champion löschen[D]\");\r\n                        System.out.println(\"Zurück[Z]\");\r\n                        System.out.print(\"Ihre Wahl: \");\r\n                        choice = reader.next().toLowerCase().charAt(0);\r\n                        reader = new Scanner(System.in);\r\n\r\n                        switch (choice) {\r\n                            case 'l':\r\n                                System.out.println(\"Wählen Sie Ihren Champion aus!\");\r\n                                List<Champion> cList;\r\n                                cList = readChamps(path);\r\n                                for(Champion c: cList){\r\n                                    System.out.println(c);\r\n                                }\r\n                                break;\r\n                            case 'c':\r\n                                // Champion erstellen\r\n                                Champion c = createChamp();\r\n                                boolean champNameExists = false;\r\n                                // überprüfen, ob der Name bereits existiert\r\n                                if(championList.size()>=1) {\r\n                                    for (Champion ca : championList) {\r\n                                        if (ca.getName().equals(c.getName())) {\r\n                                            champNameExists = true;\r\n                                        }\r\n                                    }\r\n                                    if(champNameExists){\r\n                                        System.out.println(\"Champion existiert bereits!\");\r\n                                    }\r\n                                    else{\r\n                                        writeChamp(path, c);\r\n                                        championList = readChamps(path);\r\n                                        System.out.println(\"Champion wurde erstellt!\");\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    writeChamp(path, c);\r\n                                    System.out.println(\"Champion wurde erstellt!\");\r\n                                    championList = readChamps(path);\r\n                                }\r\n                                // falls der NAme nicht existiert, wird er der Liste der Champs hinzugefügt\r\n\r\n                                break;\r\n                            case 'd':\r\n                                System.out.println(\"Wählen Sie Ihren Champion aus!\");\r\n                                break;\r\n                        }\r\n                    }\r\n                    while(choice != 'z');\r\n                    break;\r\n\r\n                case 'b':\r\n                    System.out.println(\"Auf Wiedersehen!\");\r\n                    break;\r\n\r\n                default:\r\n                    System.out.println(\"Falsche Taste!\");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        while(choice != 'b');\r\n    }\r\n\r\n    public Champion createChamp() throws IOException {\r\n\r\n        Champion c = new Champion();\r\n        System.out.print(\"Please enter Champion Name: \");\r\n        c.setName(reader.nextLine());\r\n        reader = new Scanner(System.in);\r\n        c.setHP(100);\r\n        c.setMana(100);\r\n        c.setSpeed(20);\r\n        c.setAtkspeed(20);\r\n        c.setMr(5);\r\n        c.setAr(5);\r\n        c.setAp(0);\r\n        c.setAd(20);\r\n        c.setGold(100.00);\r\n        c.setAggresive(false);\r\n        c.setfirstAbility(\"\");\r\n        c.setSecondAbility(\"\");\r\n\r\n        return c;\r\n    }\r\n    public void writeChamp(Path path, Champion c) throws IOException {\r\n\r\n        //Article a in eine Zeichenkette umwandeln mit Strichppunkt dazwischen\r\n        String champ = c.getName() + \";\" + c.getfirstAbility() + \";\" + c.getSecondAbility() + \";\" + c.getGold()+ \";\" +\r\n                c.getHP() + \";\" + c.getMana() + \";\" + c.getAd() + \";\" + c.getAp() + \";\" + c.getAtkspeed() + \";\" +\r\n                c.getAr() + \";\" + c.getMr() + \";\" + c.getSpeed() + \";\\n\";\r\n        if(Files.exists(path)){\r\n            Files.writeString(path, champ, StandardOpenOption.APPEND);\r\n        }\r\n        else{\r\n            Files.writeString(path, champ, StandardOpenOption.CREATE);\r\n        }\r\n\r\n    }\r\n    public void writeChamps(Path path, List<Champion> cList){\r\n\r\n        try {\r\n            Files.delete(path);\r\n\r\n            for (Champion c : cList) {\r\n                writeChamp(path, c);\r\n            }\r\n        }\r\n        catch(IOException e){\r\n            System.out.println(\"Fehler beim Hinzufügen!\");\r\n        }\r\n    }\r\n    public List<Champion> readChamps(Path path){\r\n        List<String> content = new ArrayList<>();\r\n        List<Champion> cList = new ArrayList<>();\r\n        try{\r\n            content = Files.readAllLines(path);\r\n        }\r\n        catch(IOException e){\r\n            System.out.println(\"Fehler beim Lesen der Champions\");\r\n        }\r\n\r\n        for(String line : content){\r\n            Champion c = new Champion();\r\n            String[] parts = line.split(\";\");\r\n\r\n            c.setName(parts[0]);\r\n            c.setfirstAbility(parts[1]);\r\n            c.setSecondAbility(parts[2]);\r\n            c.setGold(Double.parseDouble(parts[3]));\r\n            c.setHP(Integer.parseInt(parts[4]));\r\n            c.setMana(Integer.parseInt(parts[5]));\r\n            c.setAd(Integer.parseInt(parts[6]));\r\n            c.setAp(Integer.parseInt(parts[7]));\r\n            c.setAtkspeed(Integer.parseInt(parts[8]));\r\n            c.setAr(Integer.parseInt(parts[9]));\r\n            c.setMr(Integer.parseInt(parts[10]));\r\n            c.setSpeed(Integer.parseInt(parts[11]));\r\n            cList.add(c);\r\n        }\r\n        return cList;\r\n\r\n    }\r\n\r\n    public double fight (Monster m, Champion c){\r\n        boolean repatk;\r\n        char choice;\r\n        int maxHP = c.getHP();\r\n        System.out.print(\"As you walk into the Arena you see yur enemy \");\r\n        System.out.println(m.getMonstername());\r\n        System.out.println(\"FIGHT\\n\");\r\n        //System.out.println(m.toString());\r\n\r\n        while (m.getHP() > 0 && c.getHP() > 0){\r\n\r\n            if (m.getAtkspeed()*m.getSpeed()>c.getAtkspeed()*c.getSpeed()){\r\n\r\n                System.out.println(m.getMonstername() + \" dealt \"+ (m.getAd()-m.getAr()) + \"damage to you\" );\r\n                c.recive_ad_damage(m.getAd());\r\n                c.setAtkspeed((int)Math.round(c.getAtkspeed()+10));\r\n                if(repatk= !true){\r\n                System.out.println(m.toString());}\r\n                repatk =true;\r\n                m.setAtkspeed((int)Math.round(m.getAtkspeed()-10));\r\n\r\n            }\r\n            else {\r\n                c.setAtkspeed((int)Math.round(c.getAtkspeed()-10));\r\n                repatk = false;\r\n                System.out.println(c.getName()+\":\");\r\n                System.out.println(c.toString());\r\n\r\n\r\n                System.out.println(m.getMonstername()+\":\");\r\n                System.out.println(m.toString());\r\n                m.setAtkspeed((int)Math.round(m.getAtkspeed()+10));\r\n\r\n                System.out.println(\"NO TIME TO W8!\");\r\n                System.out.println(\"Choose ur atack\");\r\n                System.out.println(\"Physical[P]\");\r\n                System.out.println(\"Magical[M]\");\r\n                System.out.println(\"Abilities[A]\");\r\n                System.out.println(\"RUN [R] \");\r\n                choice = reader.next().toLowerCase().charAt(0);\r\n                reader = new Scanner(System.in);\r\n                System.out.print(\"\\n\\n\");\r\n                switch (choice) {\r\n                    case 'p':\r\n                        System.out.println(c.getName() + \" dealt physical\"+ c.getAd() + \"damage to \" + m.getMonstername() );\r\n                        m.recive_ad_damage(c.getAd());\r\n                        m.setAtkspeed((int)Math.round(m.getAtkspeed()+10));\r\n                        //System.out.println(c.toString());\r\n                        c.setAtkspeed((int)Math.round(c.getAtkspeed()-10));\r\n                        break;\r\n\r\n                    case 'm':\r\n                        System.out.println(c.getName() + \" dealt magical \"+ c.getAp() + \"damage to \" + m.getMonstername() );\r\n                        m.recive_ap_damage(c.getAp());\r\n                        m.setAtkspeed((int)Math.round(m.getAtkspeed()+10));\r\n                        //System.out.println(c.toString());\r\n                        c.setAtkspeed((int)Math.round(c.getAtkspeed()-10));\r\n                        break;\r\n                    case 'A':\r\n                       String ability = selectability_f (c);\r\n                       if (ability == \"Stunn\"){}\r\n                        else if (ability == \"Heal\"){if (c.getHP()+25 <= maxHP){c.setHP(c.getHP()+25);}}\r\n                        else if (ability == \"Rage\"){c.setAd(c.getAd()+10);}\r\n                        else if (ability == \"Focus\"){c.setAp(c.getMr()+10);}\r\n                        else if (ability == \"prepare for impact\"){c.setAr(c.getAr()+10);}\r\n                        else if (ability == \"none\"){}\r\n\r\n\r\n\r\n\r\n\r\n                        break;\r\n\r\n\r\n                    case 'R':\r\n                        return 0;\r\n               // System.out.println(\"got here\");\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n        if (c.getHP()!=0){return m.getCoinValue();}\r\n        else{\r\n            System.out.println(\"You fell unconcious and had to pay medical fees\");\r\n            return - 10.0;}\r\n    }\r\n    public String selectability_f (Champion c) {\r\n        char choice;\r\n        Scanner reader = new Scanner(System.in);\r\n        System.out.println(\"Choose ur ability\");\r\n        System.out.println(c.getfirstAbility() + \"[1]\");\r\n        System.out.println(c.getSecondAbility() + \"[2]\");\r\n        choice = reader.next().toLowerCase().charAt(0);\r\n        reader = new Scanner(System.in);\r\n        switch (choice) {\r\n            case '1':\r\n\r\n                return c.getfirstAbility();\r\n\r\n\r\n\r\n            case '2':\r\n\r\n                return c.getSecondAbility();\r\n\r\n\r\n            default:\r\n                return \"none\";\r\n\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Models/Methods.java b/src/Models/Methods.java
--- a/src/Models/Methods.java	(revision ffecde299833fbd095fdac6de51e4f78a69606eb)
+++ b/src/Models/Methods.java	(date 1651040667970)
@@ -16,6 +16,7 @@
 
     public void gamemenu() throws IOException {
         Path path = Paths.get("C:\\Users\\HP\\Desktop\\repositories\\Project_3BHWII_Karamatic_Hirschhuber\\Champion_Liste\\championlist.csv");
+        Path path2 = Paths.get("C:\\Users\\HP\\Desktop\\repositories\\Project_3BHWII_Karamatic_Hirschhuber\\Champion_Liste\\login.txt");
         championList = readChamps(path);
 
         char choice;
@@ -260,8 +261,8 @@
                 System.out.println(m.toString());
                 m.setAtkspeed((int)Math.round(m.getAtkspeed()+10));
 
-                System.out.println("NO TIME TO W8!");
-                System.out.println("Choose ur atack");
+                System.out.println("NO TIME TO WAIT!");
+                System.out.println("Choose ur attack");
                 System.out.println("Physical[P]");
                 System.out.println("Magical[M]");
                 System.out.println("Abilities[A]");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"36389a50-2fc5-4f0e-aa71-8bf1c7a8c55d\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Models/FIGHT.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Models/Methods.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Models/Methods.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"26YevHCVgkmQAENFhlLIeDWLcXr\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"APP_MAIN\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"APP_MAIN\" />\r\n      <module name=\"Project_Karamatic_Hirschhuber\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"ArquillianTestNG\" factoryName=\"\" nameIsGenerated=\"true\">\r\n      <option name=\"arquillianRunConfiguration\">\r\n        <value>\r\n          <option name=\"containerStateName\" value=\"\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.APP_MAIN\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"36389a50-2fc5-4f0e-aa71-8bf1c7a8c55d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1647600604481</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1647600604481</updated>\r\n      <workItem from=\"1647600610799\" duration=\"4178000\" />\r\n      <workItem from=\"1647605200128\" duration=\"813000\" />\r\n      <workItem from=\"1648190701902\" duration=\"7695000\" />\r\n      <workItem from=\"1648211996116\" duration=\"1702000\" />\r\n      <workItem from=\"1648410246063\" duration=\"1347000\" />\r\n      <workItem from=\"1648446043349\" duration=\"3266000\" />\r\n      <workItem from=\"1648450420449\" duration=\"1611000\" />\r\n      <workItem from=\"1648806145639\" duration=\"5551000\" />\r\n      <workItem from=\"1649331389574\" duration=\"11018000\" />\r\n      <workItem from=\"1650438318991\" duration=\"1995000\" />\r\n      <workItem from=\"1650621248905\" duration=\"2849000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.nio.file.FileSystemException\" package=\"java.nio.file\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ffecde299833fbd095fdac6de51e4f78a69606eb)
+++ b/.idea/workspace.xml	(date 1651040483949)
@@ -3,7 +3,7 @@
   <component name="ChangeListManager">
     <list default="true" id="36389a50-2fc5-4f0e-aa71-8bf1c7a8c55d" name="Default Changelist" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Models/FIGHT.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/APP_MAIN.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/APP_MAIN.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Models/Methods.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Models/Methods.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -38,19 +38,6 @@
     <configuration name="APP_MAIN" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="APP_MAIN" />
       <module name="Project_Karamatic_Hirschhuber" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
-      <option name="arquillianRunConfiguration">
-        <value>
-          <option name="containerStateName" value="" />
-        </value>
-      </option>
-      <option name="TEST_OBJECT" value="CLASS" />
-      <properties />
-      <listeners />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -79,7 +66,8 @@
       <workItem from="1648806145639" duration="5551000" />
       <workItem from="1649331389574" duration="11018000" />
       <workItem from="1650438318991" duration="1995000" />
-      <workItem from="1650621248905" duration="2849000" />
+      <workItem from="1650621248905" duration="4758000" />
+      <workItem from="1651039545769" duration="928000" />
     </task>
     <servers />
   </component>
